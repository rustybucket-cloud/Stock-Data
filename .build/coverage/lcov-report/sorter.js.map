{
  "version": 3,
  "sources": ["../../../coverage/lcov-report/sorter.js"],
  "sourcesContent": ["/* eslint-disable */\nvar addSorting = (function() {\n    'use strict';\n    var cols,\n        currentSort = {\n            index: 0,\n            desc: false\n        };\n\n    // returns the summary table element\n    function getTable() {\n        return document.querySelector('.coverage-summary');\n    }\n    // returns the thead element of the summary table\n    function getTableHeader() {\n        return getTable().querySelector('thead tr');\n    }\n    // returns the tbody element of the summary table\n    function getTableBody() {\n        return getTable().querySelector('tbody');\n    }\n    // returns the th element for nth column\n    function getNthColumn(n) {\n        return getTableHeader().querySelectorAll('th')[n];\n    }\n\n    function onFilterInput() {\n        const searchValue = document.getElementById('fileSearch').value;\n        const rows = document.getElementsByTagName('tbody')[0].children;\n        for (let i = 0; i < rows.length; i++) {\n            const row = rows[i];\n            if (\n                row.textContent\n                    .toLowerCase()\n                    .includes(searchValue.toLowerCase())\n            ) {\n                row.style.display = '';\n            } else {\n                row.style.display = 'none';\n            }\n        }\n    }\n\n    // loads the search box\n    function addSearchBox() {\n        var template = document.getElementById('filterTemplate');\n        var templateClone = template.content.cloneNode(true);\n        templateClone.getElementById('fileSearch').oninput = onFilterInput;\n        template.parentElement.appendChild(templateClone);\n    }\n\n    // loads all columns\n    function loadColumns() {\n        var colNodes = getTableHeader().querySelectorAll('th'),\n            colNode,\n            cols = [],\n            col,\n            i;\n\n        for (i = 0; i < colNodes.length; i += 1) {\n            colNode = colNodes[i];\n            col = {\n                key: colNode.getAttribute('data-col'),\n                sortable: !colNode.getAttribute('data-nosort'),\n                type: colNode.getAttribute('data-type') || 'string'\n            };\n            cols.push(col);\n            if (col.sortable) {\n                col.defaultDescSort = col.type === 'number';\n                colNode.innerHTML =\n                    colNode.innerHTML + '<span class=\"sorter\"></span>';\n            }\n        }\n        return cols;\n    }\n    // attaches a data attribute to every tr element with an object\n    // of data values keyed by column name\n    function loadRowData(tableRow) {\n        var tableCols = tableRow.querySelectorAll('td'),\n            colNode,\n            col,\n            data = {},\n            i,\n            val;\n        for (i = 0; i < tableCols.length; i += 1) {\n            colNode = tableCols[i];\n            col = cols[i];\n            val = colNode.getAttribute('data-value');\n            if (col.type === 'number') {\n                val = Number(val);\n            }\n            data[col.key] = val;\n        }\n        return data;\n    }\n    // loads all row data\n    function loadData() {\n        var rows = getTableBody().querySelectorAll('tr'),\n            i;\n\n        for (i = 0; i < rows.length; i += 1) {\n            rows[i].data = loadRowData(rows[i]);\n        }\n    }\n    // sorts the table using the data for the ith column\n    function sortByIndex(index, desc) {\n        var key = cols[index].key,\n            sorter = function(a, b) {\n                a = a.data[key];\n                b = b.data[key];\n                return a < b ? -1 : a > b ? 1 : 0;\n            },\n            finalSorter = sorter,\n            tableBody = document.querySelector('.coverage-summary tbody'),\n            rowNodes = tableBody.querySelectorAll('tr'),\n            rows = [],\n            i;\n\n        if (desc) {\n            finalSorter = function(a, b) {\n                return -1 * sorter(a, b);\n            };\n        }\n\n        for (i = 0; i < rowNodes.length; i += 1) {\n            rows.push(rowNodes[i]);\n            tableBody.removeChild(rowNodes[i]);\n        }\n\n        rows.sort(finalSorter);\n\n        for (i = 0; i < rows.length; i += 1) {\n            tableBody.appendChild(rows[i]);\n        }\n    }\n    // removes sort indicators for current column being sorted\n    function removeSortIndicators() {\n        var col = getNthColumn(currentSort.index),\n            cls = col.className;\n\n        cls = cls.replace(/ sorted$/, '').replace(/ sorted-desc$/, '');\n        col.className = cls;\n    }\n    // adds sort indicators for current column being sorted\n    function addSortIndicators() {\n        getNthColumn(currentSort.index).className += currentSort.desc\n            ? ' sorted-desc'\n            : ' sorted';\n    }\n    // adds event listeners for all sorter widgets\n    function enableUI() {\n        var i,\n            el,\n            ithSorter = function ithSorter(i) {\n                var col = cols[i];\n\n                return function() {\n                    var desc = col.defaultDescSort;\n\n                    if (currentSort.index === i) {\n                        desc = !currentSort.desc;\n                    }\n                    sortByIndex(i, desc);\n                    removeSortIndicators();\n                    currentSort.index = i;\n                    currentSort.desc = desc;\n                    addSortIndicators();\n                };\n            };\n        for (i = 0; i < cols.length; i += 1) {\n            if (cols[i].sortable) {\n                // add the click event handler on the th so users\n                // dont have to click on those tiny arrows\n                el = getNthColumn(i).querySelector('.sorter').parentElement;\n                if (el.addEventListener) {\n                    el.addEventListener('click', ithSorter(i));\n                } else {\n                    el.attachEvent('onclick', ithSorter(i));\n                }\n            }\n        }\n    }\n    // adds sorting functionality to the UI\n    return function() {\n        if (!getTable()) {\n            return;\n        }\n        cols = loadColumns();\n        loadData();\n        addSearchBox();\n        addSortIndicators();\n        enableUI();\n    };\n})();\n\nwindow.addEventListener('load', addSorting);\n"],
  "mappings": "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",
  "names": []
}
